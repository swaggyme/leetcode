/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        ListNode p = new ListNode(0);
        ListNode q = p;
        while(l1 != null && l2 != null){
            if(l1.val <= l2.val){
                p.next = l1;
                l1 = l1.next;
            }else{
                p.next = l2;
                l2 = l2.next;
            } 
            p = p.next;
        }
        p.next = l1 == null ? l2:l1;
        return q.next;
    }
}
时间复杂度 O(M+N)O(M+N) ： M, N分别为链表l1, l2的长度，合并操作需遍历两链表。
空间复杂度 O(1)O(1) ： 节点引用 dumdum , curcur 使用常数大小的额外空间。
